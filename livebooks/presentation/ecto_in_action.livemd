# Ecto in action

```elixir
Mix.install([
  {:jason, "~> 1.4"},
  {:kino, "~> 0.9", override: true},
  {:youtube, github: "brooklinjazz/youtube"},
  {:hidden_cell, github: "brooklinjazz/hidden_cell"}
])
```

## Navigation

<div style="display: flex; align-items: center; width: 100%; justify-content: space-between; font-size: 1rem; color: #61758a; background-color: #f0f5f9; height: 4rem; padding: 0 1rem; border-radius: 1rem;">
<div style="display: flex;">
<i class="ri-home-fill"></i>
<a style="display: flex; color: #61758a; margin-left: 1rem;" href="../start.livemd">Home</a>
</div>
<div style="display: flex;">
<i class="ri-bug-fill"></i>
<a style="display: flex; color: #61758a; margin-left: 1rem;" href="https://github.com/DockYard-Academy/curriculum/issues/new?assignees=&labels=&template=issue.md&title=Phoenix 1.7">Report An Issue</a>
</div>
<div style="display: flex;">
<i class="ri-arrow-left-fill"></i>
<a style="display: flex; color: #61758a; margin-left: 1rem;" href="../exercises/sql_drills.livemd">SQL Drills</a>
</div>
<div style="display: flex;">
<a style="display: flex; color: #61758a; margin-right: 1rem;" href="../reading/web_servers.livemd">Web Servers</a>
<i class="ri-arrow-right-fill"></i>
</div>
</div>

## Review Questions

- What Ecto is and what isnâ€™t (differences with ORMs)
- Connect the app and database
- Elements of Ecto https://hexdocs.pm/ecto/Ecto.html
  - Schema
  - Repo
  - Query
  - Changeset
- Introduce schema construction, for example entity
- Introduce migrations & how to run them
- Data insertion / updating with schema, changeset, and application service
- Unique constraints
- Simple Querying with LIKE, foreign keys, and join
- Reminder - functional nature of token transformation (should be covered in day 1 initially)
- Prepare seeds with Faker to have a dataset for further exercises
- creating entities reflected in DB with Ecto Schema and running DB migrations
- will be able to implement a basic CRUD scenario with data insertion, validation, and querying from context facade & application service to DB column
- ensure data integrity in typical cases

## Overview

### Phoenix
